\documentclass{article}

% currently required by Ott-generated, un-wrapped LaTeX
\usepackage{amsmath}

% required by LJ's LaTeX
\usepackage{amssymb}

% the package that allows customized layout described in this document
\usepackage{ottlayout}

% the automatically generated file (with our Makefile) to link the generated
% LaTeX with the ottlayout package
\include{calc_included}

% supertabular package required if using the default grammar tabular
\usepackage{supertabular}

% only used in bibliography to link to LJ's webpage
\usepackage{url}

\newcommand{\comm}[3]{\color{#1}[#2: #3]}
\newcommand{\aseem}[1]{\comm{magenta}{Aseem}{#1}}

\begin{document}

\section{Formal Development}

Correctness theorem that we will aim at:

If:

\begin{itemize}
\item $[[G |- sc ~> c | G']]$  (Compilation of source command)
\item $[[G ~ srho]]$  (Source environment, maps free variables to values)
\item $[[srho |- sc !! srho'; sobs]]$  (Source semantics, no MPC)
\item $[[G |- srho ~> rho]]$  (Compiling source environment to C++ environment, free secret variables are mapped to wire ranges)
\item $[[G; rho |- srho ~> crho1; crho2]]$  (Compiling source enviroment to circuit environment, secret variables are converted to shares)
\end{itemize}

Then:

\begin{itemize}
\item $[[rho |- c !! rho' ; ckt]]$  (The C++ ABY program)
\item $[[crho1, crho2 |- ckt !! crho1', crho2'; sobs]]$  (Circuit evaluation)
\end{itemize}

\begin{figure}
\ottgrammartabular{\otts\ottinterrule\ottl\ottinterrule\ottbt\ottinterrule\ottt\ottinterrule\ottcons\ottinterrule\ottse\ottinterrule\ottsc\ottinterrule}
\caption{Source language}
\end{figure}

\begin{figure}
\ottgrammartabular{\ottsv\ottinterrule\ottsrho\ottinterrule\ottsobs\ottinterrule}
\caption{Source runtime}
\end{figure}

\begin{figure}
  \ottdefnsJEvalSE
  \caption{Source expression evaluation}
\end{figure}

\begin{figure}
  \ottdefnsJEvalSC
  \caption{Source command evaluation}
\end{figure}

\begin{figure}
  \ottdefnsJSVTyping
  \caption{Value typing}
\end{figure}

\begin{figure}
  \ottgrammartabular{\otte\ottinterrule\ottc\ottafterlastrule\ottG\ottafterlastrule}
  \caption{Target language}
\end{figure}

\begin{figure}
  \ottdefnsJCompileE
  \caption{Expression compilation}
\end{figure}

\begin{figure}
  \ottdefnsJCompileC
  \caption{Command compilation}
\end{figure}

\begin{figure}
  \ottgrammartabular{\ottr\ottinterrule\ottw\ottinterrule\ottv\ottinterrule\ottckt\ottinterrule\ottrho\ottinterrule}
  \caption{Target runtime}
\end{figure}

\begin{figure}
  \ottdefnsJEvalE
  \caption{Target expression evaluation}
\end{figure}

\begin{figure}
  \ottdefnsJEvalC
  \caption{Target command evaluation}
\end{figure}

\begin{figure}
  \ottgrammartabular{\ottcv\ottinterrule\ottcrho\ottinterrule}
  \caption{Circuit runtime}
\end{figure}

\begin{figure}
  \ottdefnsJEvalCirc
  \caption{Circuit evaluation}
\end{figure}

\begin{figure}
  \ottdefnsJSEnvGammaEquiv
  \caption{Source environment and type environment consistency}
\end{figure}

\begin{figure}
  \ottdefnsJTEnvCompile
  \caption{Source environment to target environment compilation}
\end{figure}

\begin{figure}
  \ottdefnsJCktEnvCompile
  \caption{Source environment to circuit environment compilation}
\end{figure}

%% \begin{figure}
%% \ottdefnreduce{}
%% \end{figure}

\end{document}
