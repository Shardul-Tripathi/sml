// cnn

uint32_t WWc1[5][5][1][32];
uint32_t WWc2[5][5][32][64];
uint32_t WWf1[3136][1024];
uint32_t WWf2[1024][10];
uint32_t bbc1[32];
uint32_t bbc2[64];
uint32_t bbf1[1024];
uint32_t bbf2[10];
uint32_t xx[784];
uint32_t tmp0[1][28][28][1];
uint32_t tmp1[1][28][28][32];
uint32_t tmp2[1][28][28][1];
uint32_t tmp3[1][32][32][1];
uint32_t tmp4[5][5][1][32];
uint32_t tmp5[1][28][28][1][25];
uint32_t tmp6;
uint32_t tmp7;
uint32_t tmp8;
uint32_t tmp9;
uint32_t tmp10;
uint32_t tmp11[1][28][28][32];
uint32_t tmp12;
uint32_t tmp13;
uint32_t tmp14[1][28][28][32];
uint32_t tmp15[1][14][14][32];
uint32_t tmp16;
uint32_t tmp17[1][14][14][64];
uint32_t tmp18[1][14][14][32];
uint32_t tmp19[1][18][18][32];
uint32_t tmp20[5][5][32][64];
uint32_t tmp21[1][14][14][32][25];
uint32_t tmp22;
uint32_t tmp23;
uint32_t tmp24;
uint32_t tmp25;
uint32_t tmp26;
uint32_t tmp27[1][14][14][64];
uint32_t tmp28;
uint32_t tmp29;
uint32_t tmp30[1][14][14][64];
uint32_t tmp31[1][7][7][64];
uint32_t tmp32;
uint32_t tmp33[1][3136];
uint32_t tmp34[1][1024];
uint32_t tmp35[1][3136];
uint32_t tmp36[3136][1024];
uint32_t tmp37[1][1024][3136];
uint32_t tmp38;
uint32_t tmp39;
uint32_t tmp40[1][1024];
uint32_t tmp41;
uint32_t tmp42;
uint32_t tmp43[1][1024];
uint32_t tmp44[1][10];
uint32_t tmp45[1][1024];
uint32_t tmp46[1024][10];
uint32_t tmp47[1][10][1024];
uint32_t tmp48;
uint32_t tmp49;
uint32_t tmp50[1][10];
uint32_t tmp51;
uint32_t tmp52;
uint32_t tmp53;
uint32_t tmp54;
uint32_t tmp55;
uint32_t tmp56;
for uint32_t i72 = [0:5] {
  for uint32_t i73 = [0:5] {
    for uint32_t i74 = [0:1] {
      for uint32_t i75 = [0:32] {
        WWc1[i72][i73][i74][i75] = input2(456);
      }
    }
  }
}
for uint32_t i76 = [0:5] {
  for uint32_t i77 = [0:5] {
    for uint32_t i78 = [0:32] {
      for uint32_t i79 = [0:64] {
        WWc2[i76][i77][i78][i79] = input2(456);
      }
    }
  }
}
for uint32_t i80 = [0:3136] {
  for uint32_t i81 = [0:1024] {
    WWf1[i80][i81] = input2(456);
  }
}
for uint32_t i82 = [0:1024] {
  for uint32_t i83 = [0:10] {
    WWf2[i82][i83] = input2(456);
  }
}
for uint32_t i84 = [0:32] {
  bbc1[i84] = input2(456);
}
for uint32_t i85 = [0:64] {
  bbc2[i85] = input2(456);
}
for uint32_t i86 = [0:1024] {
  bbf1[i86] = input2(456);
}
for uint32_t i87 = [0:10] {
  bbf2[i87] = input2(456);
}
for uint32_t i88 = [0:784] {
  xx[i88] = input1(123);
}
for uint32_t i0 = [0:1] {
  for uint32_t i1 = [0:28] {
    for uint32_t i2 = [0:28] {
      for uint32_t i3 = [0:1] {
        tmp0[i0][i1][i2][i3] = xx[(i3+((i2*1)+((i1*28)+(i0*784))))];
      }
    }
  }
}
for uint32_t i4 = [0:1] {
  for uint32_t i5 = [0:28] {
    for uint32_t i6 = [0:28] {
      for uint32_t i7 = [0:1] {
        tmp2[i4][i5][i6][i7] = ((tmp0[i4][i5][i6][i7]<2147483648) ? (tmp0[i4][i5][i6][i7]>>15) : (((tmp0[i4][i5][i6][i7]^4294967295)>>15)^4294967295));
      }
    }
  }
}
for uint32_t i8 = [0:5] {
  for uint32_t i9 = [0:5] {
    for uint32_t i7 = [0:1] {
      for uint32_t i10 = [0:32] {
        tmp4[i8][i9][i7][i10] = ((WWc1[i8][i9][i7][i10]<2147483648) ? (WWc1[i8][i9][i7][i10]>>15) : (((WWc1[i8][i9][i7][i10]^4294967295)>>15)^4294967295));
      }
    }
  }
}
for uint32_t i4 = [0:1] {
  tmp6 = 0;
  for uint32_t i5 = [0:28] {
    tmp7 = 0;
    for uint32_t i6 = [0:28] {
      for uint32_t i7 = [0:1] {
        tmp3[i4][i5][i6][i7] = ((((tmp6-2)<28)&&((tmp7-2)<28)) ? tmp2[i4][(i5-2)][(i6-2)][i7] : 0);
      }
      tmp7 = (tmp7+1);
    }
    tmp6 = (tmp6+1);
  }
}
for uint32_t i4 = [0:1] {
  for uint32_t i5 = [0:28] {
    for uint32_t i6 = [0:28] {
      for uint32_t i10 = [0:32] {
        tmp8 = 0;
        for uint32_t i8 = [0:5] {
          for uint32_t i9 = [0:5] {
            for uint32_t i7 = [0:1] {
              tmp5[i4][i5][i6][i10][tmp8] = (tmp3[i4][(i5+i8)][(i6+i9)][i7]*tmp4[i8][i9][i7][i10]);
              tmp8 = (tmp8+1);
            }
          }
        }
      }
    }
  }
}
for uint32_t i4 = [0:1] {
  for uint32_t i5 = [0:28] {
    for uint32_t i6 = [0:28] {
      for uint32_t i10 = [0:32] {
        tmp9 = 25;
        for uint32_t i11 = [0:5] {
          tmp10 = 0;
          for uint32_t i12 = [0:13] {
            tmp5[i4][i5][i6][i10][i12] = ((tmp10<(tmp9>>1)) ? (((tmp5[i4][i5][i6][i10][(2*i12)]+tmp5[i4][i5][i6][i10][((2*i12)+1)])<2147483648) ? ((tmp5[i4][i5][i6][i10][(2*i12)]+tmp5[i4][i5][i6][i10][((2*i12)+1)])>>1) : ((((tmp5[i4][i5][i6][i10][(2*i12)]+tmp5[i4][i5][i6][i10][((2*i12)+1)])^4294967295)>>1)^4294967295)) : (((tmp10==(tmp9>>1))&&((tmp9&1)==1)) ? ((tmp5[i4][i5][i6][i10][(2*i12)]<2147483648) ? (tmp5[i4][i5][i6][i10][(2*i12)]>>1) : (((tmp5[i4][i5][i6][i10][(2*i12)]^4294967295)>>1)^4294967295)) : 0));
            tmp10 = (tmp10+1);
          }
          tmp9 = ((tmp9+1)>>1);
        }
        for uint32_t i11 = [0:0] {
          tmp10 = 0;
          for uint32_t i12 = [0:13] {
            tmp5[i4][i5][i6][i10][i12] = ((tmp10<(tmp9>>1)) ? (tmp5[i4][i5][i6][i10][(2*i12)]+tmp5[i4][i5][i6][i10][((2*i12)+1)]) : (((tmp10==(tmp9>>1))&&((tmp9&1)==1)) ? tmp5[i4][i5][i6][i10][(2*i12)] : 0));
            tmp10 = (tmp10+1);
          }
          tmp9 = ((tmp9+1)>>1);
        }
        tmp1[i4][i5][i6][i10] = tmp5[i4][i5][i6][i10][0];
      }
    }
  }
}
for uint32_t i13 = [0:1] {
  for uint32_t i14 = [0:28] {
    for uint32_t i15 = [0:28] {
      for uint32_t i16 = [0:32] {
        tmp12 = tmp1[i13][i14][i15][i16];
        tmp13 = ((bbc1[i16]<2147483648) ? (bbc1[i16]>>8) : (((bbc1[i16]^4294967295)>>8)^4294967295));
        tmp11[i13][i14][i15][i16] = (tmp12+tmp13);
        tmp11[i13][i14][i15][i16] = tmp11[i13][i14][i15][i16];
      }
    }
  }
}
for uint32_t i17 = [0:1] {
  for uint32_t i18 = [0:28] {
    for uint32_t i19 = [0:28] {
      for uint32_t i20 = [0:32] {
        tmp14[i17][i18][i19][i20] = ((tmp11[i17][i18][i19][i20]<2147483648) ? tmp11[i17][i18][i19][i20] : 0);
      }
    }
  }
}
for uint32_t i21 = [0:1] {
  for uint32_t i22 = [0:14] {
    for uint32_t i23 = [0:14] {
      for uint32_t i24 = [0:32] {
        tmp16 = tmp14[i21][((2*i22)+0)][((2*i23)+0)][i24];
        for uint32_t i25 = [0:2] {
          for uint32_t i26 = [0:2] {
            tmp16 = ((tmp16>tmp14[i21][((2*i22)+i25)][((2*i23)+i26)][i24]) ? tmp16 : tmp14[i21][((2*i22)+i25)][((2*i23)+i26)][i24]);
          }
        }
        tmp15[i21][i22][i23][i24] = tmp16;
      }
    }
  }
}
for uint32_t i27 = [0:1] {
  for uint32_t i28 = [0:14] {
    for uint32_t i29 = [0:14] {
      for uint32_t i30 = [0:32] {
        tmp18[i27][i28][i29][i30] = ((tmp15[i27][i28][i29][i30]<2147483648) ? (tmp15[i27][i28][i29][i30]>>15) : (((tmp15[i27][i28][i29][i30]^4294967295)>>15)^4294967295));
      }
    }
  }
}
for uint32_t i31 = [0:5] {
  for uint32_t i32 = [0:5] {
    for uint32_t i30 = [0:32] {
      for uint32_t i33 = [0:64] {
        tmp20[i31][i32][i30][i33] = ((WWc2[i31][i32][i30][i33]<2147483648) ? (WWc2[i31][i32][i30][i33]>>15) : (((WWc2[i31][i32][i30][i33]^4294967295)>>15)^4294967295));
      }
    }
  }
}
for uint32_t i27 = [0:1] {
  tmp22 = 0;
  for uint32_t i28 = [0:14] {
    tmp23 = 0;
    for uint32_t i29 = [0:14] {
      for uint32_t i30 = [0:32] {
        tmp19[i27][i28][i29][i30] = ((((tmp22-2)<14)&&((tmp23-2)<14)) ? tmp18[i27][(i28-2)][(i29-2)][i30] : 0);
      }
      tmp23 = (tmp23+1);
    }
    tmp22 = (tmp22+1);
  }
}
for uint32_t i27 = [0:1] {
  for uint32_t i28 = [0:14] {
    for uint32_t i29 = [0:14] {
      for uint32_t i33 = [0:64] {
        tmp24 = 0;
        for uint32_t i31 = [0:5] {
          for uint32_t i32 = [0:5] {
            for uint32_t i30 = [0:32] {
              tmp21[i27][i28][i29][i33][tmp24] = (tmp19[i27][(i28+i31)][(i29+i32)][i30]*tmp20[i31][i32][i30][i33]);
              tmp24 = (tmp24+1);
            }
          }
        }
      }
    }
  }
}
for uint32_t i27 = [0:1] {
  for uint32_t i28 = [0:14] {
    for uint32_t i29 = [0:14] {
      for uint32_t i33 = [0:64] {
        tmp25 = 25;
        for uint32_t i34 = [0:1] {
          tmp26 = 0;
          for uint32_t i35 = [0:13] {
            tmp21[i27][i28][i29][i33][i35] = ((tmp26<(tmp25>>1)) ? (((tmp21[i27][i28][i29][i33][(2*i35)]+tmp21[i27][i28][i29][i33][((2*i35)+1)])<2147483648) ? ((tmp21[i27][i28][i29][i33][(2*i35)]+tmp21[i27][i28][i29][i33][((2*i35)+1)])>>1) : ((((tmp21[i27][i28][i29][i33][(2*i35)]+tmp21[i27][i28][i29][i33][((2*i35)+1)])^4294967295)>>1)^4294967295)) : (((tmp26==(tmp25>>1))&&((tmp25&1)==1)) ? ((tmp21[i27][i28][i29][i33][(2*i35)]<2147483648) ? (tmp21[i27][i28][i29][i33][(2*i35)]>>1) : (((tmp21[i27][i28][i29][i33][(2*i35)]^4294967295)>>1)^4294967295)) : 0));
            tmp26 = (tmp26+1);
          }
          tmp25 = ((tmp25+1)>>1);
        }
        for uint32_t i34 = [0:9] {
          tmp26 = 0;
          for uint32_t i35 = [0:13] {
            tmp21[i27][i28][i29][i33][i35] = ((tmp26<(tmp25>>1)) ? (tmp21[i27][i28][i29][i33][(2*i35)]+tmp21[i27][i28][i29][i33][((2*i35)+1)]) : (((tmp26==(tmp25>>1))&&((tmp25&1)==1)) ? tmp21[i27][i28][i29][i33][(2*i35)] : 0));
            tmp26 = (tmp26+1);
          }
          tmp25 = ((tmp25+1)>>1);
        }
        tmp17[i27][i28][i29][i33] = tmp21[i27][i28][i29][i33][0];
      }
    }
  }
}
for uint32_t i36 = [0:1] {
  for uint32_t i37 = [0:14] {
    for uint32_t i38 = [0:14] {
      for uint32_t i39 = [0:64] {
        tmp28 = tmp17[i36][i37][i38][i39];
        tmp29 = ((bbc2[i39]<2147483648) ? (bbc2[i39]>>8) : (((bbc2[i39]^4294967295)>>8)^4294967295));
        tmp27[i36][i37][i38][i39] = (tmp28+tmp29);
        tmp27[i36][i37][i38][i39] = tmp27[i36][i37][i38][i39];
      }
    }
  }
}
for uint32_t i40 = [0:1] {
  for uint32_t i41 = [0:14] {
    for uint32_t i42 = [0:14] {
      for uint32_t i43 = [0:64] {
        tmp30[i40][i41][i42][i43] = ((tmp27[i40][i41][i42][i43]<2147483648) ? tmp27[i40][i41][i42][i43] : 0);
      }
    }
  }
}
for uint32_t i44 = [0:1] {
  for uint32_t i45 = [0:7] {
    for uint32_t i46 = [0:7] {
      for uint32_t i47 = [0:64] {
        tmp32 = tmp30[i44][((2*i45)+0)][((2*i46)+0)][i47];
        for uint32_t i48 = [0:2] {
          for uint32_t i49 = [0:2] {
            tmp32 = ((tmp32>tmp30[i44][((2*i45)+i48)][((2*i46)+i49)][i47]) ? tmp32 : tmp30[i44][((2*i45)+i48)][((2*i46)+i49)][i47]);
          }
        }
        tmp31[i44][i45][i46][i47] = tmp32;
      }
    }
  }
}
for uint32_t i50 = [0:1] {
  for uint32_t i51 = [0:7] {
    for uint32_t i52 = [0:7] {
      for uint32_t i53 = [0:64] {
        tmp33[0][(i53+((i52*64)+((i51*448)+(i50*3136))))] = tmp31[i50][i51][i52][i53];
      }
    }
  }
}
for uint32_t i54 = [0:1] {
  for uint32_t i55 = [0:3136] {
    tmp35[i54][i55] = ((tmp33[i54][i55]<2147483648) ? (tmp33[i54][i55]>>15) : (((tmp33[i54][i55]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i55 = [0:3136] {
  for uint32_t i56 = [0:1024] {
    tmp36[i55][i56] = ((WWf1[i55][i56]<2147483648) ? (WWf1[i55][i56]>>15) : (((WWf1[i55][i56]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i54 = [0:1] {
  for uint32_t i56 = [0:1024] {
    for uint32_t i55 = [0:3136] {
      tmp37[i54][i56][i55] = (tmp35[i54][i55]*tmp36[i55][i56]);
    }
  }
}
for uint32_t i54 = [0:1] {
  for uint32_t i56 = [0:1024] {
    tmp38 = 3136;
    for uint32_t i57 = [0:1] {
      tmp39 = 0;
      for uint32_t i58 = [0:1569] {
        tmp37[i54][i56][i58] = ((tmp39<(tmp38>>1)) ? (((tmp37[i54][i56][(2*i58)]+tmp37[i54][i56][((2*i58)+1)])<2147483648) ? ((tmp37[i54][i56][(2*i58)]+tmp37[i54][i56][((2*i58)+1)])>>1) : ((((tmp37[i54][i56][(2*i58)]+tmp37[i54][i56][((2*i58)+1)])^4294967295)>>1)^4294967295)) : (((tmp39==(tmp38>>1))&&((tmp38&1)==1)) ? ((tmp37[i54][i56][(2*i58)]<2147483648) ? (tmp37[i54][i56][(2*i58)]>>1) : (((tmp37[i54][i56][(2*i58)]^4294967295)>>1)^4294967295)) : 0));
        tmp39 = (tmp39+1);
      }
      tmp38 = ((tmp38+1)>>1);
    }
    for uint32_t i57 = [0:11] {
      tmp39 = 0;
      for uint32_t i58 = [0:1569] {
        tmp37[i54][i56][i58] = ((tmp39<(tmp38>>1)) ? (tmp37[i54][i56][(2*i58)]+tmp37[i54][i56][((2*i58)+1)]) : (((tmp39==(tmp38>>1))&&((tmp38&1)==1)) ? tmp37[i54][i56][(2*i58)] : 0));
        tmp39 = (tmp39+1);
      }
      tmp38 = ((tmp38+1)>>1);
    }
    tmp34[i54][i56] = tmp37[i54][i56][0];
  }
}
for uint32_t i59 = [0:1] {
  for uint32_t i60 = [0:1024] {
    tmp41 = tmp34[i59][i60];
    tmp42 = ((bbf1[i60]<2147483648) ? (bbf1[i60]>>8) : (((bbf1[i60]^4294967295)>>8)^4294967295));
    tmp40[i59][i60] = (tmp41+tmp42);
    tmp40[i59][i60] = tmp40[i59][i60];
  }
}
for uint32_t i61 = [0:1] {
  for uint32_t i62 = [0:1024] {
    tmp43[i61][i62] = ((tmp40[i61][i62]<2147483648) ? tmp40[i61][i62] : 0);
  }
}
for uint32_t i63 = [0:1] {
  for uint32_t i64 = [0:1024] {
    tmp45[i63][i64] = ((tmp43[i63][i64]<2147483648) ? (tmp43[i63][i64]>>15) : (((tmp43[i63][i64]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i64 = [0:1024] {
  for uint32_t i65 = [0:10] {
    tmp46[i64][i65] = ((WWf2[i64][i65]<2147483648) ? (WWf2[i64][i65]>>15) : (((WWf2[i64][i65]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i63 = [0:1] {
  for uint32_t i65 = [0:10] {
    for uint32_t i64 = [0:1024] {
      tmp47[i63][i65][i64] = (tmp45[i63][i64]*tmp46[i64][i65]);
    }
  }
}
for uint32_t i63 = [0:1] {
  for uint32_t i65 = [0:10] {
    tmp48 = 1024;
    for uint32_t i66 = [0:1] {
      tmp49 = 0;
      for uint32_t i67 = [0:513] {
        tmp47[i63][i65][i67] = ((tmp49<(tmp48>>1)) ? (((tmp47[i63][i65][(2*i67)]+tmp47[i63][i65][((2*i67)+1)])<2147483648) ? ((tmp47[i63][i65][(2*i67)]+tmp47[i63][i65][((2*i67)+1)])>>1) : ((((tmp47[i63][i65][(2*i67)]+tmp47[i63][i65][((2*i67)+1)])^4294967295)>>1)^4294967295)) : (((tmp49==(tmp48>>1))&&((tmp48&1)==1)) ? ((tmp47[i63][i65][(2*i67)]<2147483648) ? (tmp47[i63][i65][(2*i67)]>>1) : (((tmp47[i63][i65][(2*i67)]^4294967295)>>1)^4294967295)) : 0));
        tmp49 = (tmp49+1);
      }
      tmp48 = ((tmp48+1)>>1);
    }
    for uint32_t i66 = [0:9] {
      tmp49 = 0;
      for uint32_t i67 = [0:513] {
        tmp47[i63][i65][i67] = ((tmp49<(tmp48>>1)) ? (tmp47[i63][i65][(2*i67)]+tmp47[i63][i65][((2*i67)+1)]) : (((tmp49==(tmp48>>1))&&((tmp48&1)==1)) ? tmp47[i63][i65][(2*i67)] : 0));
        tmp49 = (tmp49+1);
      }
      tmp48 = ((tmp48+1)>>1);
    }
    tmp44[i63][i65] = tmp47[i63][i65][0];
  }
}
for uint32_t i68 = [0:1] {
  for uint32_t i69 = [0:10] {
    tmp51 = tmp44[i68][i69];
    tmp52 = ((bbf2[i69]<2147483648) ? (bbf2[i69]>>7) : (((bbf2[i69]^4294967295)>>7)^4294967295));
    tmp50[i68][i69] = (tmp51+tmp52);
    tmp50[i68][i69] = tmp50[i68][i69];
  }
}
tmp53 = 0;
tmp54 = 0;
tmp55 = tmp50[0][0];
for uint32_t i70 = [0:1] {
  for uint32_t i71 = [0:10] {
    tmp56 = ((tmp55<2147483648) ? ((tmp50[i70][i71]<2147483648) ? ((tmp55>tmp50[i70][i71]) ? tmp55 : tmp50[i70][i71]) : tmp55) : ((tmp50[i70][i71]<2147483648) ? tmp50[i70][i71] : ((tmp55>tmp50[i70][i71]) ? tmp55 : tmp50[i70][i71])));
    tmp54 = ((tmp55==tmp56) ? tmp54 : tmp53);
    tmp55 = tmp56;
    tmp53 = (tmp53+1);
  }
}
output(tmp54);
