// cnn

uint32_t WWc1[5][5][1][32];
uint32_t WWc2[5][5][32][64];
uint32_t WWf1[3136][1024];
uint32_t WWf2[1024][10];
uint32_t bbc1[32];
uint32_t bbc2[64];
uint32_t bbf1[1024];
uint32_t bbf2[10];
uint32_t xx[784];
uint32_t tmp0[1][28][28][1];
uint32_t tmp1;
uint32_t tmp2;
uint32_t tmp3[1][28][28][32];
uint32_t tmp4[1][28][28][1];
uint32_t tmp5[1][32][32][1];
uint32_t tmp6[5][5][1][32];
uint32_t tmp7[1][28][28][1][25];
uint32_t tmp8;
uint32_t tmp9;
uint32_t tmp10;
uint32_t tmp11;
uint32_t tmp12;
uint32_t tmp13[1][28][28][32];
uint32_t tmp14;
uint32_t tmp15;
uint32_t tmp16[1][28][28][32];
uint32_t tmp17[1][14][14][32];
uint32_t tmp18;
uint32_t tmp19[1][14][14][64];
uint32_t tmp20[1][14][14][32];
uint32_t tmp21[1][18][18][32];
uint32_t tmp22[5][5][32][64];
uint32_t tmp23[1][14][14][32][25];
uint32_t tmp24;
uint32_t tmp25;
uint32_t tmp26;
uint32_t tmp27;
uint32_t tmp28;
uint32_t tmp29[1][14][14][64];
uint32_t tmp30;
uint32_t tmp31;
uint32_t tmp32[1][14][14][64];
uint32_t tmp33[1][7][7][64];
uint32_t tmp34;
uint32_t tmp35[1][3136];
uint32_t tmp36;
uint32_t tmp37;
uint32_t tmp38;
uint32_t tmp39;
uint32_t tmp40;
uint32_t tmp41[1][1024];
uint32_t tmp42[1][3136];
uint32_t tmp43[3136][1024];
uint32_t tmp44[1][1024][3136];
uint32_t tmp45;
uint32_t tmp46;
uint32_t tmp47[1][1024];
uint32_t tmp48;
uint32_t tmp49;
uint32_t tmp50[1][1024];
uint32_t tmp51[1][10];
uint32_t tmp52[1][1024];
uint32_t tmp53[1024][10];
uint32_t tmp54[1][10][1024];
uint32_t tmp55;
uint32_t tmp56;
uint32_t tmp57[1][10];
uint32_t tmp58;
uint32_t tmp59;
uint32_t tmp60;
uint32_t tmp61;
uint32_t tmp62;
uint32_t tmp63;
tmp2 = 0;
for uint32_t i0 = [0:1] {
  for uint32_t i1 = [0:28] {
    for uint32_t i2 = [0:28] {
      for uint32_t i3 = [0:1] {
        tmp0[i0][i1][i2][i3] = xx[tmp2];
        tmp2 = (tmp2+1);
      }
    }
  }
}
for uint32_t i4 = [0:1] {
  for uint32_t i5 = [0:28] {
    for uint32_t i6 = [0:28] {
      for uint32_t i7 = [0:1] {
        tmp4[i4][i5][i6][i7] = ((tmp0[i4][i5][i6][i7]<2147483648) ? (tmp0[i4][i5][i6][i7]>>15) : (((tmp0[i4][i5][i6][i7]^4294967295)>>15)^4294967295));
      }
    }
  }
}
for uint32_t i8 = [0:5] {
  for uint32_t i9 = [0:5] {
    for uint32_t i7 = [0:1] {
      for uint32_t i10 = [0:32] {
        tmp6[i8][i9][i7][i10] = ((WWc1[i8][i9][i7][i10]<2147483648) ? (WWc1[i8][i9][i7][i10]>>15) : (((WWc1[i8][i9][i7][i10]^4294967295)>>15)^4294967295));
      }
    }
  }
}
for uint32_t i4 = [0:1] {
  tmp8 = 0;
  for uint32_t i5 = [0:28] {
    tmp9 = 0;
    for uint32_t i6 = [0:28] {
      for uint32_t i7 = [0:1] {
        tmp5[i4][i5][i6][i7] = ((((tmp8-2)<28)&&((tmp9-2)<28)) ? tmp4[i4][(i5-2)][(i6-2)][i7] : 0);
      }
      tmp9 = (tmp9+1);
    }
    tmp8 = (tmp8+1);
  }
}
for uint32_t i4 = [0:1] {
  for uint32_t i5 = [0:28] {
    for uint32_t i6 = [0:28] {
      for uint32_t i10 = [0:32] {
        tmp10 = 0;
        for uint32_t i8 = [0:5] {
          for uint32_t i9 = [0:5] {
            for uint32_t i7 = [0:1] {
              tmp7[i4][i5][i6][i10][tmp10] = (tmp5[i4][(i5+i8)][(i6+i9)][i7]*tmp6[i8][i9][i7][i10]);
              tmp10 = (tmp10+1);
            }
          }
        }
      }
    }
  }
}
for uint32_t i4 = [0:1] {
  for uint32_t i5 = [0:28] {
    for uint32_t i6 = [0:28] {
      for uint32_t i10 = [0:32] {
        tmp11 = 25;
        for uint32_t i11 = [0:5] {
          tmp12 = 0;
          for uint32_t i12 = [0:13] {
            tmp7[i4][i5][i6][i10][i12] = ((tmp12<(tmp11>>1)) ? (((tmp7[i4][i5][i6][i10][(2*i12)]+tmp7[i4][i5][i6][i10][((2*i12)+1)])<2147483648) ? ((tmp7[i4][i5][i6][i10][(2*i12)]+tmp7[i4][i5][i6][i10][((2*i12)+1)])>>1) : ((((tmp7[i4][i5][i6][i10][(2*i12)]+tmp7[i4][i5][i6][i10][((2*i12)+1)])^4294967295)>>1)^4294967295)) : (((tmp12==(tmp11>>1))&&((tmp11&1)==1)) ? ((tmp7[i4][i5][i6][i10][(2*i12)]<2147483648) ? (tmp7[i4][i5][i6][i10][(2*i12)]>>1) : (((tmp7[i4][i5][i6][i10][(2*i12)]^4294967295)>>1)^4294967295)) : 0));
            tmp12 = (tmp12+1);
          }
          tmp11 = ((tmp11+1)>>1);
        }
        for uint32_t i11 = [0:0] {
          tmp12 = 0;
          for uint32_t i12 = [0:13] {
            tmp7[i4][i5][i6][i10][i12] = ((tmp12<(tmp11>>1)) ? (tmp7[i4][i5][i6][i10][(2*i12)]+tmp7[i4][i5][i6][i10][((2*i12)+1)]) : (((tmp12==(tmp11>>1))&&((tmp11&1)==1)) ? tmp7[i4][i5][i6][i10][(2*i12)] : 0));
            tmp12 = (tmp12+1);
          }
          tmp11 = ((tmp11+1)>>1);
        }
        tmp3[i4][i5][i6][i10] = tmp7[i4][i5][i6][i10][0];
      }
    }
  }
}
for uint32_t i13 = [0:1] {
  for uint32_t i14 = [0:28] {
    for uint32_t i15 = [0:28] {
      for uint32_t i16 = [0:32] {
        tmp14 = tmp3[i13][i14][i15][i16];
        tmp15 = ((bbc1[i16]<2147483648) ? (bbc1[i16]>>8) : (((bbc1[i16]^4294967295)>>8)^4294967295));
        tmp13[i13][i14][i15][i16] = (tmp14+tmp15);
        tmp13[i13][i14][i15][i16] = tmp13[i13][i14][i15][i16];
      }
    }
  }
}
for uint32_t i17 = [0:1] {
  for uint32_t i18 = [0:28] {
    for uint32_t i19 = [0:28] {
      for uint32_t i20 = [0:32] {
        tmp16[i17][i18][i19][i20] = ((tmp13[i17][i18][i19][i20]<2147483648) ? tmp13[i17][i18][i19][i20] : 0);
      }
    }
  }
}
for uint32_t i21 = [0:1] {
  for uint32_t i22 = [0:14] {
    for uint32_t i23 = [0:14] {
      for uint32_t i24 = [0:32] {
        tmp18 = tmp16[i21][((2*i22)+0)][((2*i23)+0)][i24];
        for uint32_t i25 = [0:2] {
          for uint32_t i26 = [0:2] {
            tmp18 = ((tmp18>tmp16[i21][((2*i22)+i25)][((2*i23)+i26)][i24]) ? tmp18 : tmp16[i21][((2*i22)+i25)][((2*i23)+i26)][i24]);
          }
        }
        tmp17[i21][i22][i23][i24] = tmp18;
      }
    }
  }
}
for uint32_t i27 = [0:1] {
  for uint32_t i28 = [0:14] {
    for uint32_t i29 = [0:14] {
      for uint32_t i30 = [0:32] {
        tmp20[i27][i28][i29][i30] = ((tmp17[i27][i28][i29][i30]<2147483648) ? (tmp17[i27][i28][i29][i30]>>15) : (((tmp17[i27][i28][i29][i30]^4294967295)>>15)^4294967295));
      }
    }
  }
}
for uint32_t i31 = [0:5] {
  for uint32_t i32 = [0:5] {
    for uint32_t i30 = [0:32] {
      for uint32_t i33 = [0:64] {
        tmp22[i31][i32][i30][i33] = ((WWc2[i31][i32][i30][i33]<2147483648) ? (WWc2[i31][i32][i30][i33]>>15) : (((WWc2[i31][i32][i30][i33]^4294967295)>>15)^4294967295));
      }
    }
  }
}
for uint32_t i27 = [0:1] {
  tmp24 = 0;
  for uint32_t i28 = [0:14] {
    tmp25 = 0;
    for uint32_t i29 = [0:14] {
      for uint32_t i30 = [0:32] {
        tmp21[i27][i28][i29][i30] = ((((tmp24-2)<14)&&((tmp25-2)<14)) ? tmp20[i27][(i28-2)][(i29-2)][i30] : 0);
      }
      tmp25 = (tmp25+1);
    }
    tmp24 = (tmp24+1);
  }
}
for uint32_t i27 = [0:1] {
  for uint32_t i28 = [0:14] {
    for uint32_t i29 = [0:14] {
      for uint32_t i33 = [0:64] {
        tmp26 = 0;
        for uint32_t i31 = [0:5] {
          for uint32_t i32 = [0:5] {
            for uint32_t i30 = [0:32] {
              tmp23[i27][i28][i29][i33][tmp26] = (tmp21[i27][(i28+i31)][(i29+i32)][i30]*tmp22[i31][i32][i30][i33]);
              tmp26 = (tmp26+1);
            }
          }
        }
      }
    }
  }
}
for uint32_t i27 = [0:1] {
  for uint32_t i28 = [0:14] {
    for uint32_t i29 = [0:14] {
      for uint32_t i33 = [0:64] {
        tmp27 = 25;
        for uint32_t i34 = [0:1] {
          tmp28 = 0;
          for uint32_t i35 = [0:13] {
            tmp23[i27][i28][i29][i33][i35] = ((tmp28<(tmp27>>1)) ? (((tmp23[i27][i28][i29][i33][(2*i35)]+tmp23[i27][i28][i29][i33][((2*i35)+1)])<2147483648) ? ((tmp23[i27][i28][i29][i33][(2*i35)]+tmp23[i27][i28][i29][i33][((2*i35)+1)])>>1) : ((((tmp23[i27][i28][i29][i33][(2*i35)]+tmp23[i27][i28][i29][i33][((2*i35)+1)])^4294967295)>>1)^4294967295)) : (((tmp28==(tmp27>>1))&&((tmp27&1)==1)) ? ((tmp23[i27][i28][i29][i33][(2*i35)]<2147483648) ? (tmp23[i27][i28][i29][i33][(2*i35)]>>1) : (((tmp23[i27][i28][i29][i33][(2*i35)]^4294967295)>>1)^4294967295)) : 0));
            tmp28 = (tmp28+1);
          }
          tmp27 = ((tmp27+1)>>1);
        }
        for uint32_t i34 = [0:9] {
          tmp28 = 0;
          for uint32_t i35 = [0:13] {
            tmp23[i27][i28][i29][i33][i35] = ((tmp28<(tmp27>>1)) ? (tmp23[i27][i28][i29][i33][(2*i35)]+tmp23[i27][i28][i29][i33][((2*i35)+1)]) : (((tmp28==(tmp27>>1))&&((tmp27&1)==1)) ? tmp23[i27][i28][i29][i33][(2*i35)] : 0));
            tmp28 = (tmp28+1);
          }
          tmp27 = ((tmp27+1)>>1);
        }
        tmp19[i27][i28][i29][i33] = tmp23[i27][i28][i29][i33][0];
      }
    }
  }
}
for uint32_t i36 = [0:1] {
  for uint32_t i37 = [0:14] {
    for uint32_t i38 = [0:14] {
      for uint32_t i39 = [0:64] {
        tmp30 = tmp19[i36][i37][i38][i39];
        tmp31 = ((bbc2[i39]<2147483648) ? (bbc2[i39]>>8) : (((bbc2[i39]^4294967295)>>8)^4294967295));
        tmp29[i36][i37][i38][i39] = (tmp30+tmp31);
        tmp29[i36][i37][i38][i39] = tmp29[i36][i37][i38][i39];
      }
    }
  }
}
for uint32_t i40 = [0:1] {
  for uint32_t i41 = [0:14] {
    for uint32_t i42 = [0:14] {
      for uint32_t i43 = [0:64] {
        tmp32[i40][i41][i42][i43] = ((tmp29[i40][i41][i42][i43]<2147483648) ? tmp29[i40][i41][i42][i43] : 0);
      }
    }
  }
}
for uint32_t i44 = [0:1] {
  for uint32_t i45 = [0:7] {
    for uint32_t i46 = [0:7] {
      for uint32_t i47 = [0:64] {
        tmp34 = tmp32[i44][((2*i45)+0)][((2*i46)+0)][i47];
        for uint32_t i48 = [0:2] {
          for uint32_t i49 = [0:2] {
            tmp34 = ((tmp34>tmp32[i44][((2*i45)+i48)][((2*i46)+i49)][i47]) ? tmp34 : tmp32[i44][((2*i45)+i48)][((2*i46)+i49)][i47]);
          }
        }
        tmp33[i44][i45][i46][i47] = tmp34;
      }
    }
  }
}
tmp37 = 0;
tmp38 = 0;
tmp39 = 0;
tmp40 = 0;
for uint32_t i50 = [0:1] {
  for uint32_t i51 = [0:3136] {
    tmp35[i50][i51] = tmp33[tmp37][tmp38][tmp39][tmp40];
    tmp40 = (tmp40+1);
    tmp36 = ((tmp40==64) ? 1 : 0);
    tmp40 = ((tmp36==1) ? 0 : tmp40);
    tmp39 = ((tmp36==1) ? (tmp39+1) : tmp39);
    tmp36 = ((tmp39==7) ? 1 : 0);
    tmp39 = ((tmp36==1) ? 0 : tmp39);
    tmp38 = ((tmp36==1) ? (tmp38+1) : tmp38);
    tmp36 = ((tmp38==7) ? 1 : 0);
    tmp38 = ((tmp36==1) ? 0 : tmp38);
    tmp37 = ((tmp36==1) ? (tmp37+1) : tmp37);
  }
}
for uint32_t i52 = [0:1] {
  for uint32_t i53 = [0:3136] {
    tmp42[i52][i53] = ((tmp35[i52][i53]<2147483648) ? (tmp35[i52][i53]>>15) : (((tmp35[i52][i53]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i53 = [0:3136] {
  for uint32_t i54 = [0:1024] {
    tmp43[i53][i54] = ((WWf1[i53][i54]<2147483648) ? (WWf1[i53][i54]>>15) : (((WWf1[i53][i54]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i52 = [0:1] {
  for uint32_t i54 = [0:1024] {
    for uint32_t i53 = [0:3136] {
      tmp44[i52][i54][i53] = (tmp42[i52][i53]*tmp43[i53][i54]);
    }
  }
}
for uint32_t i52 = [0:1] {
  for uint32_t i54 = [0:1024] {
    tmp45 = 3136;
    for uint32_t i55 = [0:1] {
      tmp46 = 0;
      for uint32_t i56 = [0:1569] {
        tmp44[i52][i54][i56] = ((tmp46<(tmp45>>1)) ? (((tmp44[i52][i54][(2*i56)]+tmp44[i52][i54][((2*i56)+1)])<2147483648) ? ((tmp44[i52][i54][(2*i56)]+tmp44[i52][i54][((2*i56)+1)])>>1) : ((((tmp44[i52][i54][(2*i56)]+tmp44[i52][i54][((2*i56)+1)])^4294967295)>>1)^4294967295)) : (((tmp46==(tmp45>>1))&&((tmp45&1)==1)) ? ((tmp44[i52][i54][(2*i56)]<2147483648) ? (tmp44[i52][i54][(2*i56)]>>1) : (((tmp44[i52][i54][(2*i56)]^4294967295)>>1)^4294967295)) : 0));
        tmp46 = (tmp46+1);
      }
      tmp45 = ((tmp45+1)>>1);
    }
    for uint32_t i55 = [0:11] {
      tmp46 = 0;
      for uint32_t i56 = [0:1569] {
        tmp44[i52][i54][i56] = ((tmp46<(tmp45>>1)) ? (tmp44[i52][i54][(2*i56)]+tmp44[i52][i54][((2*i56)+1)]) : (((tmp46==(tmp45>>1))&&((tmp45&1)==1)) ? tmp44[i52][i54][(2*i56)] : 0));
        tmp46 = (tmp46+1);
      }
      tmp45 = ((tmp45+1)>>1);
    }
    tmp41[i52][i54] = tmp44[i52][i54][0];
  }
}
for uint32_t i57 = [0:1] {
  for uint32_t i58 = [0:1024] {
    tmp48 = tmp41[i57][i58];
    tmp49 = ((bbf1[i58]<2147483648) ? (bbf1[i58]>>8) : (((bbf1[i58]^4294967295)>>8)^4294967295));
    tmp47[i57][i58] = (tmp48+tmp49);
    tmp47[i57][i58] = tmp47[i57][i58];
  }
}
for uint32_t i59 = [0:1] {
  for uint32_t i60 = [0:1024] {
    tmp50[i59][i60] = ((tmp47[i59][i60]<2147483648) ? tmp47[i59][i60] : 0);
  }
}
for uint32_t i61 = [0:1] {
  for uint32_t i62 = [0:1024] {
    tmp52[i61][i62] = ((tmp50[i61][i62]<2147483648) ? (tmp50[i61][i62]>>15) : (((tmp50[i61][i62]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i62 = [0:1024] {
  for uint32_t i63 = [0:10] {
    tmp53[i62][i63] = ((WWf2[i62][i63]<2147483648) ? (WWf2[i62][i63]>>15) : (((WWf2[i62][i63]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i61 = [0:1] {
  for uint32_t i63 = [0:10] {
    for uint32_t i62 = [0:1024] {
      tmp54[i61][i63][i62] = (tmp52[i61][i62]*tmp53[i62][i63]);
    }
  }
}
for uint32_t i61 = [0:1] {
  for uint32_t i63 = [0:10] {
    tmp55 = 1024;
    for uint32_t i64 = [0:1] {
      tmp56 = 0;
      for uint32_t i65 = [0:513] {
        tmp54[i61][i63][i65] = ((tmp56<(tmp55>>1)) ? (((tmp54[i61][i63][(2*i65)]+tmp54[i61][i63][((2*i65)+1)])<2147483648) ? ((tmp54[i61][i63][(2*i65)]+tmp54[i61][i63][((2*i65)+1)])>>1) : ((((tmp54[i61][i63][(2*i65)]+tmp54[i61][i63][((2*i65)+1)])^4294967295)>>1)^4294967295)) : (((tmp56==(tmp55>>1))&&((tmp55&1)==1)) ? ((tmp54[i61][i63][(2*i65)]<2147483648) ? (tmp54[i61][i63][(2*i65)]>>1) : (((tmp54[i61][i63][(2*i65)]^4294967295)>>1)^4294967295)) : 0));
        tmp56 = (tmp56+1);
      }
      tmp55 = ((tmp55+1)>>1);
    }
    for uint32_t i64 = [0:9] {
      tmp56 = 0;
      for uint32_t i65 = [0:513] {
        tmp54[i61][i63][i65] = ((tmp56<(tmp55>>1)) ? (tmp54[i61][i63][(2*i65)]+tmp54[i61][i63][((2*i65)+1)]) : (((tmp56==(tmp55>>1))&&((tmp55&1)==1)) ? tmp54[i61][i63][(2*i65)] : 0));
        tmp56 = (tmp56+1);
      }
      tmp55 = ((tmp55+1)>>1);
    }
    tmp51[i61][i63] = tmp54[i61][i63][0];
  }
}
for uint32_t i66 = [0:1] {
  for uint32_t i67 = [0:10] {
    tmp58 = tmp51[i66][i67];
    tmp59 = ((bbf2[i67]<2147483648) ? (bbf2[i67]>>7) : (((bbf2[i67]^4294967295)>>7)^4294967295));
    tmp57[i66][i67] = (tmp58+tmp59);
    tmp57[i66][i67] = tmp57[i66][i67];
  }
}
tmp60 = 0;
tmp61 = 0;
tmp62 = tmp57[0][0];
for uint32_t i68 = [0:1] {
  for uint32_t i69 = [0:10] {
    tmp63 = ((tmp62<2147483648) ? ((tmp57[i68][i69]<2147483648) ? ((tmp62>tmp57[i68][i69]) ? tmp62 : tmp57[i68][i69]) : tmp62) : ((tmp57[i68][i69]<2147483648) ? tmp57[i68][i69] : ((tmp62>tmp57[i68][i69]) ? tmp62 : tmp57[i68][i69])));
    tmp61 = ((tmp62==tmp63) ? tmp61 : tmp60);
    tmp62 = tmp63;
    tmp60 = (tmp60+1);
  }
}
output(tmp61);
