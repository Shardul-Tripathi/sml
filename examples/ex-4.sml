// bonsai

uint32_t WW[4][1][7];
uint32_t VV[4][1][7];
uint32_t TT[4][1][7];
uint32_t ZZ[7][1000];
uint32_t xx[1000][1];
uint32_t tmp0;
uint32_t tmp1;
uint32_t cur1;
uint32_t tmp2[1][7];
uint32_t tmp3;
uint32_t tmp4[1][7];
uint32_t tmp5[1][1000];
uint32_t tmp6[1][7];
uint32_t tmp7[7][1000];
uint32_t tmp8[1][1000][7];
uint32_t tmp9;
uint32_t tmp10;
uint32_t tmp11[1][1];
uint32_t tmp12[1][1000];
uint32_t tmp13[1000][1];
uint32_t tmp14[1][1][1000];
uint32_t tmp15;
uint32_t tmp16;
uint32_t tmp17;
uint32_t tmp18;
uint32_t tmp19;
uint32_t tmp20;
uint32_t tmp21;
uint32_t tmp22;
uint32_t tmp23;
uint32_t tmp24;
uint32_t tmp25;
uint32_t tmp26;
uint32_t tmp27[1][1000];
uint32_t tmp28[1][7];
uint32_t tmp29[7][1000];
uint32_t tmp30[1][1000][7];
uint32_t tmp31;
uint32_t tmp32;
uint32_t tmp33[1][1];
uint32_t tmp34[1][1000];
uint32_t tmp35[1000][1];
uint32_t tmp36[1][1][1000];
uint32_t tmp37;
uint32_t tmp38;
uint32_t tmp39[1][1];
uint32_t tmp40[1][1];
uint32_t tmp41;
uint32_t tmp42[1][1000];
uint32_t tmp43[1][7];
uint32_t tmp44[7][1000];
uint32_t tmp45[1][1000][7];
uint32_t tmp46;
uint32_t tmp47;
uint32_t tmp48[1][1];
uint32_t tmp49[1][1000];
uint32_t tmp50[1000][1];
uint32_t tmp51[1][1][1000];
uint32_t tmp52;
uint32_t tmp53;
uint32_t cur2;
uint32_t tmp54[1][7];
uint32_t tmp55;
uint32_t tmp56[1][7];
uint32_t tmp57[1][1000];
uint32_t tmp58[1][7];
uint32_t tmp59[7][1000];
uint32_t tmp60[1][1000][7];
uint32_t tmp61;
uint32_t tmp62;
uint32_t tmp63[1][1];
uint32_t tmp64[1][1000];
uint32_t tmp65[1000][1];
uint32_t tmp66[1][1][1000];
uint32_t tmp67;
uint32_t tmp68;
uint32_t tmp69;
uint32_t tmp70;
uint32_t tmp71;
uint32_t tmp72;
uint32_t tmp73;
uint32_t tmp74;
uint32_t tmp75;
uint32_t tmp76;
uint32_t tmp77;
uint32_t tmp78;
uint32_t tmp79[1][1000];
uint32_t tmp80[1][7];
uint32_t tmp81[7][1000];
uint32_t tmp82[1][1000][7];
uint32_t tmp83;
uint32_t tmp84;
uint32_t tmp85[1][1];
uint32_t tmp86[1][1000];
uint32_t tmp87[1000][1];
uint32_t tmp88[1][1][1000];
uint32_t tmp89;
uint32_t tmp90;
uint32_t tmp91[1][1];
uint32_t tmp92[1][1];
uint32_t tmp93;
uint32_t tmp94[1][1];
uint32_t tmp95;
uint32_t tmp96;
tmp0 = 858993459;
tmp1 = 858993459;
cur1 = 1;
tmp3 = ((tmp0<2147483648) ? (tmp0>>15) : (((tmp0^4294967295)>>15)^4294967295));
for uint32_t i0 = [0:1] {
  for uint32_t i1 = [0:7] {
    tmp4[i0][i1] = ((VV[cur1][i0][i1]<2147483648) ? (VV[cur1][i0][i1]>>15) : (((VV[cur1][i0][i1]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i0 = [0:1] {
  for uint32_t i1 = [0:7] {
    tmp2[i0][i1] = (tmp3*tmp4[i0][i1]);
  }
}
for uint32_t i2 = [0:1] {
  for uint32_t i3 = [0:7] {
    tmp6[i2][i3] = ((tmp2[i2][i3]<2147483648) ? (tmp2[i2][i3]>>15) : (((tmp2[i2][i3]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i3 = [0:7] {
  for uint32_t i4 = [0:1000] {
    tmp7[i3][i4] = ((ZZ[i3][i4]<2147483648) ? (ZZ[i3][i4]>>15) : (((ZZ[i3][i4]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i2 = [0:1] {
  for uint32_t i4 = [0:1000] {
    for uint32_t i3 = [0:7] {
      tmp8[i2][i4][i3] = (tmp6[i2][i3]*tmp7[i3][i4]);
    }
  }
}
for uint32_t i2 = [0:1] {
  for uint32_t i4 = [0:1000] {
    tmp9 = 7;
    for uint32_t i5 = [0:3] {
      tmp10 = 0;
      for uint32_t i6 = [0:4] {
        tmp8[i2][i4][i6] = ((tmp10<(tmp9>>1)) ? (((tmp8[i2][i4][(2*i6)]+tmp8[i2][i4][((2*i6)+1)])<2147483648) ? ((tmp8[i2][i4][(2*i6)]+tmp8[i2][i4][((2*i6)+1)])>>1) : ((((tmp8[i2][i4][(2*i6)]+tmp8[i2][i4][((2*i6)+1)])^4294967295)>>1)^4294967295)) : (((tmp10==(tmp9>>1))&&((tmp9&1)==1)) ? ((tmp8[i2][i4][(2*i6)]<2147483648) ? (tmp8[i2][i4][(2*i6)]>>1) : (((tmp8[i2][i4][(2*i6)]^4294967295)>>1)^4294967295)) : 0));
        tmp10 = (tmp10+1);
      }
      tmp9 = ((tmp9+1)>>1);
    }
    for uint32_t i5 = [0:0] {
      tmp10 = 0;
      for uint32_t i6 = [0:4] {
        tmp8[i2][i4][i6] = ((tmp10<(tmp9>>1)) ? (tmp8[i2][i4][(2*i6)]+tmp8[i2][i4][((2*i6)+1)]) : (((tmp10==(tmp9>>1))&&((tmp9&1)==1)) ? tmp8[i2][i4][(2*i6)] : 0));
        tmp10 = (tmp10+1);
      }
      tmp9 = ((tmp9+1)>>1);
    }
    tmp5[i2][i4] = tmp8[i2][i4][0];
  }
}
for uint32_t i7 = [0:1] {
  for uint32_t i8 = [0:1000] {
    tmp12[i7][i8] = ((tmp5[i7][i8]<2147483648) ? (tmp5[i7][i8]>>15) : (((tmp5[i7][i8]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i8 = [0:1000] {
  for uint32_t i9 = [0:1] {
    tmp13[i8][i9] = ((xx[i8][i9]<2147483648) ? (xx[i8][i9]>>15) : (((xx[i8][i9]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i7 = [0:1] {
  for uint32_t i9 = [0:1] {
    for uint32_t i8 = [0:1000] {
      tmp14[i7][i9][i8] = (tmp12[i7][i8]*tmp13[i8][i9]);
    }
  }
}
for uint32_t i7 = [0:1] {
  for uint32_t i9 = [0:1] {
    tmp15 = 1000;
    for uint32_t i10 = [0:2] {
      tmp16 = 0;
      for uint32_t i11 = [0:501] {
        tmp14[i7][i9][i11] = ((tmp16<(tmp15>>1)) ? (((tmp14[i7][i9][(2*i11)]+tmp14[i7][i9][((2*i11)+1)])<2147483648) ? ((tmp14[i7][i9][(2*i11)]+tmp14[i7][i9][((2*i11)+1)])>>1) : ((((tmp14[i7][i9][(2*i11)]+tmp14[i7][i9][((2*i11)+1)])^4294967295)>>1)^4294967295)) : (((tmp16==(tmp15>>1))&&((tmp15&1)==1)) ? ((tmp14[i7][i9][(2*i11)]<2147483648) ? (tmp14[i7][i9][(2*i11)]>>1) : (((tmp14[i7][i9][(2*i11)]^4294967295)>>1)^4294967295)) : 0));
        tmp16 = (tmp16+1);
      }
      tmp15 = ((tmp15+1)>>1);
    }
    for uint32_t i10 = [0:8] {
      tmp16 = 0;
      for uint32_t i11 = [0:501] {
        tmp14[i7][i9][i11] = ((tmp16<(tmp15>>1)) ? (tmp14[i7][i9][(2*i11)]+tmp14[i7][i9][((2*i11)+1)]) : (((tmp16==(tmp15>>1))&&((tmp15&1)==1)) ? tmp14[i7][i9][(2*i11)] : 0));
        tmp16 = (tmp16+1);
      }
      tmp15 = ((tmp15+1)>>1);
    }
    tmp11[i7][i9] = tmp14[i7][i9][0];
  }
}
tmp18 = tmp11[0][0];
tmp19 = ((tmp1<2147483648) ? (tmp1>>8) : (((tmp1^4294967295)>>8)^4294967295));
tmp17 = (tmp18-tmp19);
tmp17 = tmp17;
tmp20 = ((~tmp11[0][0])+1);
tmp22 = tmp20;
tmp23 = ((tmp1<2147483648) ? (tmp1>>8) : (((tmp1^4294967295)>>8)^4294967295));
tmp21 = (tmp22-tmp23);
tmp21 = tmp21;
tmp24 = ((~tmp1)+1);
tmp25 = ((tmp21<2147483648) ? ((tmp24<2147483648) ? (tmp24>>8) : (((tmp24^4294967295)>>8)^4294967295)) : tmp11[0][0]);
tmp26 = ((tmp17<2147483648) ? ((tmp1<2147483648) ? (tmp1>>8) : (((tmp1^4294967295)>>8)^4294967295)) : tmp25);
for uint32_t i12 = [0:1] {
  for uint32_t i13 = [0:7] {
    tmp28[i12][i13] = ((WW[cur1][i12][i13]<2147483648) ? (WW[cur1][i12][i13]>>15) : (((WW[cur1][i12][i13]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i13 = [0:7] {
  for uint32_t i14 = [0:1000] {
    tmp29[i13][i14] = ((ZZ[i13][i14]<2147483648) ? (ZZ[i13][i14]>>15) : (((ZZ[i13][i14]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i12 = [0:1] {
  for uint32_t i14 = [0:1000] {
    for uint32_t i13 = [0:7] {
      tmp30[i12][i14][i13] = (tmp28[i12][i13]*tmp29[i13][i14]);
    }
  }
}
for uint32_t i12 = [0:1] {
  for uint32_t i14 = [0:1000] {
    tmp31 = 7;
    for uint32_t i15 = [0:3] {
      tmp32 = 0;
      for uint32_t i16 = [0:4] {
        tmp30[i12][i14][i16] = ((tmp32<(tmp31>>1)) ? (((tmp30[i12][i14][(2*i16)]+tmp30[i12][i14][((2*i16)+1)])<2147483648) ? ((tmp30[i12][i14][(2*i16)]+tmp30[i12][i14][((2*i16)+1)])>>1) : ((((tmp30[i12][i14][(2*i16)]+tmp30[i12][i14][((2*i16)+1)])^4294967295)>>1)^4294967295)) : (((tmp32==(tmp31>>1))&&((tmp31&1)==1)) ? ((tmp30[i12][i14][(2*i16)]<2147483648) ? (tmp30[i12][i14][(2*i16)]>>1) : (((tmp30[i12][i14][(2*i16)]^4294967295)>>1)^4294967295)) : 0));
        tmp32 = (tmp32+1);
      }
      tmp31 = ((tmp31+1)>>1);
    }
    for uint32_t i15 = [0:0] {
      tmp32 = 0;
      for uint32_t i16 = [0:4] {
        tmp30[i12][i14][i16] = ((tmp32<(tmp31>>1)) ? (tmp30[i12][i14][(2*i16)]+tmp30[i12][i14][((2*i16)+1)]) : (((tmp32==(tmp31>>1))&&((tmp31&1)==1)) ? tmp30[i12][i14][(2*i16)] : 0));
        tmp32 = (tmp32+1);
      }
      tmp31 = ((tmp31+1)>>1);
    }
    tmp27[i12][i14] = tmp30[i12][i14][0];
  }
}
for uint32_t i17 = [0:1] {
  for uint32_t i18 = [0:1000] {
    tmp34[i17][i18] = ((tmp27[i17][i18]<2147483648) ? (tmp27[i17][i18]>>15) : (((tmp27[i17][i18]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i18 = [0:1000] {
  for uint32_t i19 = [0:1] {
    tmp35[i18][i19] = ((xx[i18][i19]<2147483648) ? (xx[i18][i19]>>15) : (((xx[i18][i19]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i17 = [0:1] {
  for uint32_t i19 = [0:1] {
    for uint32_t i18 = [0:1000] {
      tmp36[i17][i19][i18] = (tmp34[i17][i18]*tmp35[i18][i19]);
    }
  }
}
for uint32_t i17 = [0:1] {
  for uint32_t i19 = [0:1] {
    tmp37 = 1000;
    for uint32_t i20 = [0:0] {
      tmp38 = 0;
      for uint32_t i21 = [0:501] {
        tmp36[i17][i19][i21] = ((tmp38<(tmp37>>1)) ? (((tmp36[i17][i19][(2*i21)]+tmp36[i17][i19][((2*i21)+1)])<2147483648) ? ((tmp36[i17][i19][(2*i21)]+tmp36[i17][i19][((2*i21)+1)])>>1) : ((((tmp36[i17][i19][(2*i21)]+tmp36[i17][i19][((2*i21)+1)])^4294967295)>>1)^4294967295)) : (((tmp38==(tmp37>>1))&&((tmp37&1)==1)) ? ((tmp36[i17][i19][(2*i21)]<2147483648) ? (tmp36[i17][i19][(2*i21)]>>1) : (((tmp36[i17][i19][(2*i21)]^4294967295)>>1)^4294967295)) : 0));
        tmp38 = (tmp38+1);
      }
      tmp37 = ((tmp37+1)>>1);
    }
    for uint32_t i20 = [0:10] {
      tmp38 = 0;
      for uint32_t i21 = [0:501] {
        tmp36[i17][i19][i21] = ((tmp38<(tmp37>>1)) ? (tmp36[i17][i19][(2*i21)]+tmp36[i17][i19][((2*i21)+1)]) : (((tmp38==(tmp37>>1))&&((tmp37&1)==1)) ? tmp36[i17][i19][(2*i21)] : 0));
        tmp38 = (tmp38+1);
      }
      tmp37 = ((tmp37+1)>>1);
    }
    tmp33[i17][i19] = tmp36[i17][i19][0];
  }
}
for uint32_t i22 = [0:1] {
  for uint32_t i23 = [0:1] {
    tmp40[i22][i23] = ((tmp33[i22][i23]<2147483648) ? (tmp33[i22][i23]>>15) : (((tmp33[i22][i23]^4294967295)>>15)^4294967295));
  }
}
tmp41 = ((tmp26<2147483648) ? (tmp26>>15) : (((tmp26^4294967295)>>15)^4294967295));
for uint32_t i22 = [0:1] {
  for uint32_t i23 = [0:1] {
    tmp39[i22][i23] = (tmp40[i22][i23]*tmp41);
  }
}
for uint32_t i24 = [0:1] {
  for uint32_t i25 = [0:7] {
    tmp43[i24][i25] = ((TT[cur1][i24][i25]<2147483648) ? (TT[cur1][i24][i25]>>15) : (((TT[cur1][i24][i25]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i25 = [0:7] {
  for uint32_t i26 = [0:1000] {
    tmp44[i25][i26] = ((ZZ[i25][i26]<2147483648) ? (ZZ[i25][i26]>>15) : (((ZZ[i25][i26]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i24 = [0:1] {
  for uint32_t i26 = [0:1000] {
    for uint32_t i25 = [0:7] {
      tmp45[i24][i26][i25] = (tmp43[i24][i25]*tmp44[i25][i26]);
    }
  }
}
for uint32_t i24 = [0:1] {
  for uint32_t i26 = [0:1000] {
    tmp46 = 7;
    for uint32_t i27 = [0:3] {
      tmp47 = 0;
      for uint32_t i28 = [0:4] {
        tmp45[i24][i26][i28] = ((tmp47<(tmp46>>1)) ? (((tmp45[i24][i26][(2*i28)]+tmp45[i24][i26][((2*i28)+1)])<2147483648) ? ((tmp45[i24][i26][(2*i28)]+tmp45[i24][i26][((2*i28)+1)])>>1) : ((((tmp45[i24][i26][(2*i28)]+tmp45[i24][i26][((2*i28)+1)])^4294967295)>>1)^4294967295)) : (((tmp47==(tmp46>>1))&&((tmp46&1)==1)) ? ((tmp45[i24][i26][(2*i28)]<2147483648) ? (tmp45[i24][i26][(2*i28)]>>1) : (((tmp45[i24][i26][(2*i28)]^4294967295)>>1)^4294967295)) : 0));
        tmp47 = (tmp47+1);
      }
      tmp46 = ((tmp46+1)>>1);
    }
    for uint32_t i27 = [0:0] {
      tmp47 = 0;
      for uint32_t i28 = [0:4] {
        tmp45[i24][i26][i28] = ((tmp47<(tmp46>>1)) ? (tmp45[i24][i26][(2*i28)]+tmp45[i24][i26][((2*i28)+1)]) : (((tmp47==(tmp46>>1))&&((tmp46&1)==1)) ? tmp45[i24][i26][(2*i28)] : 0));
        tmp47 = (tmp47+1);
      }
      tmp46 = ((tmp46+1)>>1);
    }
    tmp42[i24][i26] = tmp45[i24][i26][0];
  }
}
for uint32_t i29 = [0:1] {
  for uint32_t i30 = [0:1000] {
    tmp49[i29][i30] = ((tmp42[i29][i30]<2147483648) ? (tmp42[i29][i30]>>15) : (((tmp42[i29][i30]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i30 = [0:1000] {
  for uint32_t i31 = [0:1] {
    tmp50[i30][i31] = ((xx[i30][i31]<2147483648) ? (xx[i30][i31]>>15) : (((xx[i30][i31]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i29 = [0:1] {
  for uint32_t i31 = [0:1] {
    for uint32_t i30 = [0:1000] {
      tmp51[i29][i31][i30] = (tmp49[i29][i30]*tmp50[i30][i31]);
    }
  }
}
for uint32_t i29 = [0:1] {
  for uint32_t i31 = [0:1] {
    tmp52 = 1000;
    for uint32_t i32 = [0:0] {
      tmp53 = 0;
      for uint32_t i33 = [0:501] {
        tmp51[i29][i31][i33] = ((tmp53<(tmp52>>1)) ? (((tmp51[i29][i31][(2*i33)]+tmp51[i29][i31][((2*i33)+1)])<2147483648) ? ((tmp51[i29][i31][(2*i33)]+tmp51[i29][i31][((2*i33)+1)])>>1) : ((((tmp51[i29][i31][(2*i33)]+tmp51[i29][i31][((2*i33)+1)])^4294967295)>>1)^4294967295)) : (((tmp53==(tmp52>>1))&&((tmp52&1)==1)) ? ((tmp51[i29][i31][(2*i33)]<2147483648) ? (tmp51[i29][i31][(2*i33)]>>1) : (((tmp51[i29][i31][(2*i33)]^4294967295)>>1)^4294967295)) : 0));
        tmp53 = (tmp53+1);
      }
      tmp52 = ((tmp52+1)>>1);
    }
    for uint32_t i32 = [0:10] {
      tmp53 = 0;
      for uint32_t i33 = [0:501] {
        tmp51[i29][i31][i33] = ((tmp53<(tmp52>>1)) ? (tmp51[i29][i31][(2*i33)]+tmp51[i29][i31][((2*i33)+1)]) : (((tmp53==(tmp52>>1))&&((tmp52&1)==1)) ? tmp51[i29][i31][(2*i33)] : 0));
        tmp53 = (tmp53+1);
      }
      tmp52 = ((tmp52+1)>>1);
    }
    tmp48[i29][i31] = tmp51[i29][i31][0];
  }
}
cur2 = ((tmp48[0][0]<2147483648) ? ((2*cur1)+1) : (2*cur1));
tmp55 = ((tmp0<2147483648) ? (tmp0>>15) : (((tmp0^4294967295)>>15)^4294967295));
for uint32_t i34 = [0:1] {
  for uint32_t i35 = [0:7] {
    tmp56[i34][i35] = ((VV[cur2][i34][i35]<2147483648) ? (VV[cur2][i34][i35]>>15) : (((VV[cur2][i34][i35]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i34 = [0:1] {
  for uint32_t i35 = [0:7] {
    tmp54[i34][i35] = (tmp55*tmp56[i34][i35]);
  }
}
for uint32_t i36 = [0:1] {
  for uint32_t i37 = [0:7] {
    tmp58[i36][i37] = ((tmp54[i36][i37]<2147483648) ? (tmp54[i36][i37]>>15) : (((tmp54[i36][i37]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i37 = [0:7] {
  for uint32_t i38 = [0:1000] {
    tmp59[i37][i38] = ((ZZ[i37][i38]<2147483648) ? (ZZ[i37][i38]>>15) : (((ZZ[i37][i38]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i36 = [0:1] {
  for uint32_t i38 = [0:1000] {
    for uint32_t i37 = [0:7] {
      tmp60[i36][i38][i37] = (tmp58[i36][i37]*tmp59[i37][i38]);
    }
  }
}
for uint32_t i36 = [0:1] {
  for uint32_t i38 = [0:1000] {
    tmp61 = 7;
    for uint32_t i39 = [0:3] {
      tmp62 = 0;
      for uint32_t i40 = [0:4] {
        tmp60[i36][i38][i40] = ((tmp62<(tmp61>>1)) ? (((tmp60[i36][i38][(2*i40)]+tmp60[i36][i38][((2*i40)+1)])<2147483648) ? ((tmp60[i36][i38][(2*i40)]+tmp60[i36][i38][((2*i40)+1)])>>1) : ((((tmp60[i36][i38][(2*i40)]+tmp60[i36][i38][((2*i40)+1)])^4294967295)>>1)^4294967295)) : (((tmp62==(tmp61>>1))&&((tmp61&1)==1)) ? ((tmp60[i36][i38][(2*i40)]<2147483648) ? (tmp60[i36][i38][(2*i40)]>>1) : (((tmp60[i36][i38][(2*i40)]^4294967295)>>1)^4294967295)) : 0));
        tmp62 = (tmp62+1);
      }
      tmp61 = ((tmp61+1)>>1);
    }
    for uint32_t i39 = [0:0] {
      tmp62 = 0;
      for uint32_t i40 = [0:4] {
        tmp60[i36][i38][i40] = ((tmp62<(tmp61>>1)) ? (tmp60[i36][i38][(2*i40)]+tmp60[i36][i38][((2*i40)+1)]) : (((tmp62==(tmp61>>1))&&((tmp61&1)==1)) ? tmp60[i36][i38][(2*i40)] : 0));
        tmp62 = (tmp62+1);
      }
      tmp61 = ((tmp61+1)>>1);
    }
    tmp57[i36][i38] = tmp60[i36][i38][0];
  }
}
for uint32_t i41 = [0:1] {
  for uint32_t i42 = [0:1000] {
    tmp64[i41][i42] = ((tmp57[i41][i42]<2147483648) ? (tmp57[i41][i42]>>15) : (((tmp57[i41][i42]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i42 = [0:1000] {
  for uint32_t i43 = [0:1] {
    tmp65[i42][i43] = ((xx[i42][i43]<2147483648) ? (xx[i42][i43]>>15) : (((xx[i42][i43]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i41 = [0:1] {
  for uint32_t i43 = [0:1] {
    for uint32_t i42 = [0:1000] {
      tmp66[i41][i43][i42] = (tmp64[i41][i42]*tmp65[i42][i43]);
    }
  }
}
for uint32_t i41 = [0:1] {
  for uint32_t i43 = [0:1] {
    tmp67 = 1000;
    for uint32_t i44 = [0:2] {
      tmp68 = 0;
      for uint32_t i45 = [0:501] {
        tmp66[i41][i43][i45] = ((tmp68<(tmp67>>1)) ? (((tmp66[i41][i43][(2*i45)]+tmp66[i41][i43][((2*i45)+1)])<2147483648) ? ((tmp66[i41][i43][(2*i45)]+tmp66[i41][i43][((2*i45)+1)])>>1) : ((((tmp66[i41][i43][(2*i45)]+tmp66[i41][i43][((2*i45)+1)])^4294967295)>>1)^4294967295)) : (((tmp68==(tmp67>>1))&&((tmp67&1)==1)) ? ((tmp66[i41][i43][(2*i45)]<2147483648) ? (tmp66[i41][i43][(2*i45)]>>1) : (((tmp66[i41][i43][(2*i45)]^4294967295)>>1)^4294967295)) : 0));
        tmp68 = (tmp68+1);
      }
      tmp67 = ((tmp67+1)>>1);
    }
    for uint32_t i44 = [0:8] {
      tmp68 = 0;
      for uint32_t i45 = [0:501] {
        tmp66[i41][i43][i45] = ((tmp68<(tmp67>>1)) ? (tmp66[i41][i43][(2*i45)]+tmp66[i41][i43][((2*i45)+1)]) : (((tmp68==(tmp67>>1))&&((tmp67&1)==1)) ? tmp66[i41][i43][(2*i45)] : 0));
        tmp68 = (tmp68+1);
      }
      tmp67 = ((tmp67+1)>>1);
    }
    tmp63[i41][i43] = tmp66[i41][i43][0];
  }
}
tmp70 = tmp63[0][0];
tmp71 = ((tmp1<2147483648) ? (tmp1>>8) : (((tmp1^4294967295)>>8)^4294967295));
tmp69 = (tmp70-tmp71);
tmp69 = tmp69;
tmp72 = ((~tmp63[0][0])+1);
tmp74 = tmp72;
tmp75 = ((tmp1<2147483648) ? (tmp1>>8) : (((tmp1^4294967295)>>8)^4294967295));
tmp73 = (tmp74-tmp75);
tmp73 = tmp73;
tmp76 = ((~tmp1)+1);
tmp77 = ((tmp73<2147483648) ? ((tmp76<2147483648) ? (tmp76>>8) : (((tmp76^4294967295)>>8)^4294967295)) : tmp63[0][0]);
tmp78 = ((tmp69<2147483648) ? ((tmp1<2147483648) ? (tmp1>>8) : (((tmp1^4294967295)>>8)^4294967295)) : tmp77);
for uint32_t i46 = [0:1] {
  for uint32_t i47 = [0:7] {
    tmp80[i46][i47] = ((WW[cur2][i46][i47]<2147483648) ? (WW[cur2][i46][i47]>>15) : (((WW[cur2][i46][i47]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i47 = [0:7] {
  for uint32_t i48 = [0:1000] {
    tmp81[i47][i48] = ((ZZ[i47][i48]<2147483648) ? (ZZ[i47][i48]>>15) : (((ZZ[i47][i48]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i46 = [0:1] {
  for uint32_t i48 = [0:1000] {
    for uint32_t i47 = [0:7] {
      tmp82[i46][i48][i47] = (tmp80[i46][i47]*tmp81[i47][i48]);
    }
  }
}
for uint32_t i46 = [0:1] {
  for uint32_t i48 = [0:1000] {
    tmp83 = 7;
    for uint32_t i49 = [0:3] {
      tmp84 = 0;
      for uint32_t i50 = [0:4] {
        tmp82[i46][i48][i50] = ((tmp84<(tmp83>>1)) ? (((tmp82[i46][i48][(2*i50)]+tmp82[i46][i48][((2*i50)+1)])<2147483648) ? ((tmp82[i46][i48][(2*i50)]+tmp82[i46][i48][((2*i50)+1)])>>1) : ((((tmp82[i46][i48][(2*i50)]+tmp82[i46][i48][((2*i50)+1)])^4294967295)>>1)^4294967295)) : (((tmp84==(tmp83>>1))&&((tmp83&1)==1)) ? ((tmp82[i46][i48][(2*i50)]<2147483648) ? (tmp82[i46][i48][(2*i50)]>>1) : (((tmp82[i46][i48][(2*i50)]^4294967295)>>1)^4294967295)) : 0));
        tmp84 = (tmp84+1);
      }
      tmp83 = ((tmp83+1)>>1);
    }
    for uint32_t i49 = [0:0] {
      tmp84 = 0;
      for uint32_t i50 = [0:4] {
        tmp82[i46][i48][i50] = ((tmp84<(tmp83>>1)) ? (tmp82[i46][i48][(2*i50)]+tmp82[i46][i48][((2*i50)+1)]) : (((tmp84==(tmp83>>1))&&((tmp83&1)==1)) ? tmp82[i46][i48][(2*i50)] : 0));
        tmp84 = (tmp84+1);
      }
      tmp83 = ((tmp83+1)>>1);
    }
    tmp79[i46][i48] = tmp82[i46][i48][0];
  }
}
for uint32_t i51 = [0:1] {
  for uint32_t i52 = [0:1000] {
    tmp86[i51][i52] = ((tmp79[i51][i52]<2147483648) ? (tmp79[i51][i52]>>15) : (((tmp79[i51][i52]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i52 = [0:1000] {
  for uint32_t i53 = [0:1] {
    tmp87[i52][i53] = ((xx[i52][i53]<2147483648) ? (xx[i52][i53]>>15) : (((xx[i52][i53]^4294967295)>>15)^4294967295));
  }
}
for uint32_t i51 = [0:1] {
  for uint32_t i53 = [0:1] {
    for uint32_t i52 = [0:1000] {
      tmp88[i51][i53][i52] = (tmp86[i51][i52]*tmp87[i52][i53]);
    }
  }
}
for uint32_t i51 = [0:1] {
  for uint32_t i53 = [0:1] {
    tmp89 = 1000;
    for uint32_t i54 = [0:0] {
      tmp90 = 0;
      for uint32_t i55 = [0:501] {
        tmp88[i51][i53][i55] = ((tmp90<(tmp89>>1)) ? (((tmp88[i51][i53][(2*i55)]+tmp88[i51][i53][((2*i55)+1)])<2147483648) ? ((tmp88[i51][i53][(2*i55)]+tmp88[i51][i53][((2*i55)+1)])>>1) : ((((tmp88[i51][i53][(2*i55)]+tmp88[i51][i53][((2*i55)+1)])^4294967295)>>1)^4294967295)) : (((tmp90==(tmp89>>1))&&((tmp89&1)==1)) ? ((tmp88[i51][i53][(2*i55)]<2147483648) ? (tmp88[i51][i53][(2*i55)]>>1) : (((tmp88[i51][i53][(2*i55)]^4294967295)>>1)^4294967295)) : 0));
        tmp90 = (tmp90+1);
      }
      tmp89 = ((tmp89+1)>>1);
    }
    for uint32_t i54 = [0:10] {
      tmp90 = 0;
      for uint32_t i55 = [0:501] {
        tmp88[i51][i53][i55] = ((tmp90<(tmp89>>1)) ? (tmp88[i51][i53][(2*i55)]+tmp88[i51][i53][((2*i55)+1)]) : (((tmp90==(tmp89>>1))&&((tmp89&1)==1)) ? tmp88[i51][i53][(2*i55)] : 0));
        tmp90 = (tmp90+1);
      }
      tmp89 = ((tmp89+1)>>1);
    }
    tmp85[i51][i53] = tmp88[i51][i53][0];
  }
}
for uint32_t i56 = [0:1] {
  for uint32_t i57 = [0:1] {
    tmp92[i56][i57] = ((tmp85[i56][i57]<2147483648) ? (tmp85[i56][i57]>>15) : (((tmp85[i56][i57]^4294967295)>>15)^4294967295));
  }
}
tmp93 = ((tmp78<2147483648) ? (tmp78>>15) : (((tmp78^4294967295)>>15)^4294967295));
for uint32_t i56 = [0:1] {
  for uint32_t i57 = [0:1] {
    tmp91[i56][i57] = (tmp92[i56][i57]*tmp93);
  }
}
for uint32_t i58 = [0:1] {
  for uint32_t i59 = [0:1] {
    tmp95 = tmp91[i58][i59];
    tmp96 = tmp39[i58][i59];
    tmp94[i58][i59] = (tmp95+tmp96);
    tmp94[i58][i59] = tmp94[i58][i59];
  }
}
output(((tmp94[0][0]<2147483648) ? 1 : 0));
